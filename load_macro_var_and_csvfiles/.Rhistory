}
if (reroll == 7) {
print('lose')
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
if (reroll == x) {
print('wine')
}
if (reroll == 7) {
print('lose')
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
if (reroll == x) {
print('wine')
}
if (reroll == 7) {
print('lose')
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
if (reroll == x) {
print('wine')
}
if (reroll == 7) {
print('lose')
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
if (reroll == x) {
print('wine')
}
if (reroll == 7) {
print('lose')
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
}
if (reroll == 7) {
print('lose')
}
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
}
if (reroll == 7) {
print('lose')
}
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
hist_record = NULL
x = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, x)
if (x == 7 | x == 11) {
print("win")
} else if (x %in% c(2, 3, 12)) {
print("lose")
} else {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
if (reroll == x) {
print('win')
} else if (reroll == 7) {
print('lose')
} else {
while (!(reroll %in% c(x, 7))) {
reroll = sum(sample(1:6, 2, replace = T))
hist_record = append(hist_record, reroll)
}
print(ifelse(reroll == x, 'win', 'lose'))
}
}
cat(hist_record)
is.imputed(imputed.x2) #Boolean vector indicating imputed values.
#Mean value imputation method 4.
library(Hmisc) #Load the Harrell miscellaneous library.
missing.data = data.frame(x1 = 1:20, x2 = c(1:10, rep(NA, 10))) #Recreating dataset.
imputed.x2 = impute(missing.data$x2, mean) #Specifically calling the x2 variable.
imputed.x2
summary(imputed.x2) #Summary information for the imputed variable.
is.imputed(imputed.x2) #Boolean vector indicating imputed values.
missing.data$x2 = imputed.x2 #Replacing the old vector.
mean(missing.data$x2) #Mean of x2 after imputation.
sd(missing.data$x2) #Standard deviation of x2 after imputation.
cor(missing.data, use = "complete.obs") #Correlation afterto imputation.
plot(missing.data) #What are some potential problems with mean value imputation?
##################################
#####Simple Random Imputation#####
##################################
#Recreating a dataset that has missing values.
missing.data = data.frame(x1 = 1:20, x2 = c(1:10, rep(NA, 10)))
missing.data
mean(missing.data$x2, na.rm = TRUE) #Mean of x2 prior to imputation.
sd(missing.data$x2, na.rm = TRUE) #Standard deviation of x2 prior to imputation.
cor(missing.data, use = "complete.obs") #Correlation prior to imputation.
set.seed(0)
imputed.x2 = impute(missing.data$x2, "random") #Simple random imputation using the
#impute() function from the Hmisc package.
imputed.x2
summary(imputed.x2) #Summary information for the imputed variable.
is.imputed(imputed.x2) #Boolean vector indicating imputed values.
missing.data$x2 = imputed.x2 #Replacing the old vector.
mean(missing.data$x2) #Mean of x2 after imputation.
sd(missing.data$x2) #Standard deviation of x2 after imputation.
cor(missing.data, use = "complete.obs") #Correlation afterto imputation.
plot(missing.data) #What are some potential problems with mean value imputation?
install.packages(c("deldir", "kknn"))
missing.data = data.frame(x1 = 1:20, x2 = c(1:10, rep(NA, 10)))
missing.data
#Imputing using 1NN.
imputed.1nn = kNN(missing.data, k=1)
imputed.1nn
?kNN
??kNN
##################################################
#####Using Minkowski Distance Measures in KNN#####
##################################################
library(kknn) #Load the weighted knn library.
#Imputing using 1NN.
imputed.1nn = kNN(missing.data, k=1)
imputed.1nn
#Imputing using 1NN.
imputed.1nn = kNN(missing.data, k=1)
imputed.1nn
kNN(missing.data, k=1)
#Imputing using 1NN.
imputed.1nn = kkNN(missing.data, k=1)
#Imputing using 1NN.
imputed.1nn = knn(missing.data, k=1)
library('class')
#Imputing using 1NN.
imputed.1nn = kNN(missing.data, k=1)
#Imputing using 1NN.
imputed.1nn = knn(missing.data, k=1)
library('DMwR')
install.packages('DMwR')
library('DMwR')
#Imputing using 1NN.
imputed.1nn = kNN(missing.data, k=1)
imputed.1nn
##################################
#####Visualizing Missing Data#####
##################################
library(VIM) #For the visualization and imputation of missing values.
setwd("C:/Users/Zhongjin Lu/Dropbox/ML_course/ML_R_Python/Capstone_Project/load_macro_var_and_csvfiles")
dat=fread('crude_gas_daily.csv')
library(plyr)
library(dplyr)
library(data.table)
library(ggplot2)
dat=fread('crude_gas_daily.csv')
dat[,date=parse_date_time(Date,orders = "ymd")] #automatic format detection
dat[,date:=parse_date_time(Date,orders = "ymd")] #automatic format detection
library(zoo) #time series
dat[,date:=parse_date_time(Date,orders = "ymd")] #automatic format detection
DT=fread('crude_gas_daily.csv')
library(lubridate)
date_conversion=function(parse_date_col,DT) {
DT[,(parse_date_col):=as.Date(parse_date_time(get(parse_date_col),orders = "ymd"))]
return (DT)}
parse_date_col="Date"
dat=date_conversion(parse_date_col,DT)
dat
dat
DT=fread('crude_gas_daily.csv')
library(lubridate)
date_conversion=function(parse_date_col,DT) {
DT[,(parse_date_col):=as.yearmon(parse_date_time(get(parse_date_col),orders = "ymd"))]
return (DT)}
parse_date_col="Date"
dat=date_conversion(parse_date_col,DT)
dat[, .SD[.N], by='Date']
dt=dat[, .SD[.N], by='Date']
fwrite(dt, 'crude_gas_monthly_zlu.csv')
DT=fread('crude_gas_daily.csv')
library(lubridate)
date_conversion=function(parse_date_col,DT) {
DT[,yearmon:=as.yearmon(parse_date_time(get(parse_date_col),orders = "ymd"))]
return (DT)}
parse_date_col="Date"
dat=date_conversion(parse_date_col,DT)
dt=dat[, .SD[.N], by='yearmon']
fwrite(dt, 'crude_gas_monthly_zlu.csv')
DT=fread('crude_gas_daily.csv')
library(lubridate)
date_conversion=function(parse_date_col,DT) {
DT[,yearmon:=as.yearmon(parse_date_time(get(parse_date_col),orders = "ymd"))]
return (DT)}
parse_date_col="Date"
dat=date_conversion(parse_date_col,DT)
dt=dat[, .SD[.N], by='yearmon']
fwrite(dt, 'crude_gas_monthly_zlu.csv')
